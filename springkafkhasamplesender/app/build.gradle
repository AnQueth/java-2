/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
 
           id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
}
 
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.apache.camel:camel-kafka:4.4.0'
 
    implementation 'org.apache.camel:camel-core:4.4.0'
    implementation 'io.opentelemetry:opentelemetry-api:1.36.0'
    implementation 'io.opentelemetry:opentelemetry-sdk:1.36.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-zipkin:1.36.0'
   // Spring Boot Starter for autoconfiguration and starter dependencies
    implementation 'org.springframework.boot:spring-boot-starter:3.2.3'
  
  implementation 'org.apache.camel.springboot:camel-opentelemetry-starter:4.4.0'

 


}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}


apply plugin: 'application'

application {
    mainClassName = 'kafkhasample.SpringBootConsoleApplication'
}

configurations {
    all {
     
    }
}

bootRun {
    jvmArgs = [
        "-javaagent:../opentelemetry-javaagent.jar",
        "-Dotel.exporter=zipkin",
        "-Dotel.exporter.zipkin.endpoint=http://localhost:9411/api/v2/spans",
        "-Dotel.resource.attributes=service.name=ktest"
		 
    ]
 
}