/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava

      implementation 'org.javassist:javassist:3.28.0-GA'

      implementation 'io.honeycomb:honeycomb-opentelemetry-sdk:1.5.2'

 
        implementation 'net.bytebuddy:byte-buddy:1.14.11'
}

tasks.withType(JavaCompile) {
    options.debug = true
    options.compilerArgs += "-g"
}

jar {
    archiveFileName = "autospanagent.jar"
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
            'Premain-Class': 'AutoSpanAgent.JavaAgent',
            'Can-Retransform-Classes': 'true'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
        from sourceSets.main.output
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit4 test framework
            useJUnit('4.13.2')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
     withSourcesJar()
}
 